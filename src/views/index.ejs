<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap.min.css"
    integrity="sha512-jnSuA4Ss2PkkikSOLtYs8BlYIeeIK1h99ty4YfvRPAlzr377vr3CXDb7sb7eEEBYjDtcYj+AjBH3FLv5uSJuXg=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <title>Graph Input Form</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100..900&display=swap');

    body {
      background-color: #191d1e;
      /*#191d1e*/
      font-family: "Roboto", sans-serif;
      padding: 20px;
      --gradient: linear-gradient(90deg, #5ebbff 3%, #a174ff 60%, #a174ff 100%);
    }
    .table-dark{
      --bs-table-bg: #191d1e;
      --bs-table-striped-bg: #272a31;
    }

    .gradient-text {
      background-image: var(--gradient);
      background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .text-white {
      opacity: 0.8;
    }

    .form-input {
      border: none;
      border-radius: 8px;
      padding: 6px 10px;
      border: 1px solid transparent;
      -webkit-border-radius: 8px;
      -moz-border-radius: 8px;
      outline: 1px solid transparent;
      color: #fff;
      caret-color: hsla(0, 0%, 100%, .64);
      background-color: #323c4a;
      transition: 0.3s ease;
      font-family: inherit;
      font-size: 1rem;
    }

    .form-input::-webkit-outer-spin-button,
    .form-input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    .form-input:hover {
      border-color: #4ddaff;
      background-color: #232e49;
    }

    .gradient-btn {
      background-color: rgba(0, 0, 0, 0);
      background-clip: border-box;
      background-image: linear-gradient(141deg, #21a2ff, #8951ff 73.36%);
      color: white;
      background-origin: padding-box;
      padding: 6px 16px;
      transition: 0.3s ease;
    }

    .secondary-btn{
      background: #232e49;
      padding: 6px 16px;
      transition: 0.3s ease;
    }
    .secondary-btn:hover{
      background: #2d383b;
      opacity: 0.9;
    }

    .bg-gray {
      background-color: #272a31;
      border-radius: 8px;
    }

    .gradient-btn:hover {
      opacity: 90%;
    }

    .vertex-block {
      border: 1px solid #ccc;
      padding: 10px;
      margin-bottom: 10px;
    }

    .adj-row {
      margin-bottom: 5px;
    }

    @media (min-width: 768px) {
      .w-md-auto {
        width: auto !important;
      }

      .mt-md-0 {
        margin-top: 0 !important;
      }
    }
  </style>
  <script>
    function generateVertexForms() {
      const count = parseInt(document.getElementById("vertexCount").value);
      const container = document.getElementById("vertexContainer");
      container.innerHTML = "";

      for (let i = 0; i < count; i++) {
        container.innerHTML += `
          <div class="vertex-block mt-3 form-label p-4">
            <h4 class = "text-white">Đỉnh ${i + 1}</h4>
            <div class = "row mt-4 align-items-center">
              <div class = "col-4 col-md-3">
                  <span class = "text-white">Tên đỉnh:</span>
              </div>
              <div class = "col-8 col-md-9">
                  <input class = 'w-100 form-input' type="text" name="vertices[${i}][name]" required>
              </div>
            </div>
            <div class = "mt-2 row align-items-center">
              <div class = "col-4 col-md-3">
                  <span class = "text-white">Số đỉnh liền kề: </span>
              </div>
              <div class = "col-8 col-md-9">
                  <input class = 'w-100 form-input' type="number" name="vertices[${i}][adjCount]" min="0" onchange="generateAdjInputs(${i}, this.value)" required>
              </div>
            </div>
            <div id="adjContainer-${i}" class="adj-container"></div>
          </div>
        `;
      }
    }

    function generateAdjInputs(vertexIndex, count) {
      const container = document.getElementById(
        `adjContainer-${vertexIndex}`
      );
      container.innerHTML = "";

      for (let j = 0; j < count; j++) {
        container.innerHTML += `
          <div class="adj-row row row-cols-1 row-md-cols-2 mt-3 ps-5">
            <div class = "col d-flex align-items-center gx-2 row">
              <div class = "col-3"><span class = "text-white">Đỉnh liền kề ${j + 1}:</span> </div>
              <div class = "col-9"><input class = "form-input w-100 d-inline-block" type="text" name="vertices[${vertexIndex}][adj][${j}][name]" required></div>
            </div>
            <div class = "col d-flex align-items-center gx-2 mt-2 row">
              <div class = "col-3"><span class = "text-white">Trọng số: </span></div>
              <div class = "col-9"><input class = "form-input w-100 d-inline-block" type="number" name="vertices[${vertexIndex}][adj][${j}][weight]" required></div>
            </div>
          </div>
        `;
      }
    }
  </script>
</head>

<body>
  <h1 class="w-100 text-center py-3 gradient-text" style="font-weight: 700;">Thuật toán Dijkstra</h1>
  <section class="section-1 mt-5">
    <div class="container px-4 py-4 bg-gray">
      <h2 class="text-primary">TẠO ĐỒ THỊ</h2>
      <div class="align-items-center mt-3 row gx-2 gx-md-3">
        <div class="col-12 col-md-4 col-lg-3">
          <label class="text-white px-0">Nhập số đỉnh của đồ thị: </label>
        </div>
        <div class="col-8 col-md-6  mt-2 mt-md-0 col-lg-7">
          <input type="number" class="w-100 form-input d-inline-block" id="vertexCount" min="1" />
        </div>
        <div class="col-4 col-md-2 mt-2 mt-md-0">
          <button type="button" class="btn btn-primary w-100" onclick="generateVertexForms()">Tạo</button>
        </div>
      </div>

      <form method="POST" action="/add-vertex">
        <div id="vertexContainer" class=""></div>
        <div class="w-100 d-flex mt-4">
          <button type="submit" class="ms-auto w-100 w-md-auto btn btn-primary">Thêm tất cả các đỉnh</button>
        </div>
      </form>
    </div>
  </section>
  
  <section class="section-2 mt-5">
    <div class="container px-4 py-4 bg-gray">
      <h2 class="text-primary">TÌM ĐƯỜNG ĐI NGẮN NHẤT</h2>
      <form method="POST" class="mt-3" action="/find-path">
        <div class="row row-cols-1 row-cols-md-2">
          <div class="col d-flex align-items-center gap-2">
            <span class="text-white">Đỉnh bắt đầu:</span>
            <input type="text" class="form-input flex-fill d-inline-block" name="start" required />
          </div>
          <div class="col d-flex mt-2 mt-md-0 align-items-center gap-2">
            <span class="text-white">Đỉnh kết thúc:</span>
            <input type="text" class="form-input flex-fill d-inline-block" name="end" required />
          </div>
        </div>
        <div class="w-100 d-flex mt-3">
          <button type="submit" class="ms-auto w-100 w-md-auto border-0 rounded-2 gradient-btn ">Tìm đường</button>
        </div>
      </form>

      <% if (path && path.length) { %>
        <h3 class="text-white mb-2">Đường đi ngắn nhất:</h3>
        <h2 class="gradient-text text-center mb-2">
          <%= path.join(' → ') %></h2>
    <h4 class = "text-white mb-0">Trọng số: <span class = "text-success"><%= distance %></span></h4>
    <!-- Hiển thị độ dài của đường đi ngắn nhất -->
    <% } else if (typeof path !== ' undefined') { %>
            <p class="text-white">Không tìm thấy đường!</p>
            <% } %>
    </div>
  </section>
  

  <section class="section-3 mt-5">
    <div class="container px-4 py-4 bg-gray">
      <h2 class="text-primary">Đồ thị hiện tại</h2>
      <!--  -->
      <% if (graph && Object.keys(graph).length> 0) { %>
        <table class="mt-3 table table-striped-columns table-dark">
          <thead>
            <tr>
              <th class="text-center" scope='col'><span class="gradient-text">Đỉnh</span></th>
              <th class="text-center" scope='col'><span class="gradient-text">Đỉnh liền kề</span></th>
            </tr>
          </thead>
          <tbody class="table-group-divider">
            <% for (let vertex in graph) { %>
              <tr>
                <td class="text-center">
                  <%= vertex %>
                </td>
                <td class="text-center">
                  <% const edges=graph[vertex]; %>
                    <% for (let adj in edges) { %>
                      <span class="text-white">
                        <%= adj %> (<%= edges[adj] %>) <% } %>
                      </span>
                </td>
              </tr>
              <% } %>
          </tbody>
        </table>
        <form method="POST" action="/reset-graph">
          <button type="submit" class="btn rounded-2 secondary-btn">
            <span class="gradient-text">Reset đồ thị</span>
          </button>
        </form>
        <% } else { %>
          <p><i class="text-white">Đồ thị rỗng</i></p>
          <% } %>
    </div>
  </section>
</body>

</html>